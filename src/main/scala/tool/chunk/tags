!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Chunker	Chunker.scala	/^abstract class Chunker(val postagger: postag.PosTagger) {$/;"	c
ChunkerMain	Chunker.scala	/^abstract class ChunkerMain$/;"	c
OpenNlpChunker	OpenNlpChunker.scala	/^class OpenNlpChunker($/;"	c
OpenNlpChunker	OpenNlpChunker.scala	/^object OpenNlpChunker extends ChunkerMain {$/;"	c
chunk	Chunker.scala	/^  def chunk(sentence: String): IndexedSeq[(String,(String,String))] = {$/;"	m
chunk	Chunker.scala	/^  def chunk(strings: Array[String]): IndexedSeq[(String,String)] = {$/;"	m
chunk	Chunker.scala	/^  def chunk(strings: Array[String], postags: Array[String]): Array[String]$/;"	m
chunk	Chunker.scala	/^package chunk$/;"	p
chunk	OpenNlpChunker.scala	/^package chunk$/;"	p
chunker	Chunker.scala	/^  def chunker: Chunker$/;"	m
chunker	OpenNlpChunker.scala	/^  lazy val chunker = new OpenNlpChunker("en-chunker.bin", new postag.OpenNlpPosTagger())$/;"	l
chunker	OpenNlpChunker.scala	/^  val chunker = new ChunkerME(model)$/;"	l
chunks	OpenNlpChunker.scala	/^    val chunks = chunker.chunk(strings, postags)$/;"	l
edu.washington.cs.knowitall	Chunker.scala	/^package edu.washington.cs.knowitall$/;"	p
edu.washington.cs.knowitall	OpenNlpChunker.scala	/^package edu.washington.cs.knowitall$/;"	p
model	OpenNlpChunker.scala	/^  val model: ChunkerModel,$/;"	l
postags	Chunker.scala	/^    val postags = postagger.postag(strings)$/;"	l
resource	OpenNlpChunker.scala	/^    val resource = classOf[OpenNlpChunker].getClassLoader.getResourceAsStream(name)$/;"	l
this	OpenNlpChunker.scala	/^  def this(modelName: String = "en-chunker.bin", $/;"	m
tool	Chunker.scala	/^package tool$/;"	p
tool	OpenNlpChunker.scala	/^package tool$/;"	p
unzipped	Chunker.scala	/^    val unzipped = postagger.postag(sentence).unzip$/;"	l
